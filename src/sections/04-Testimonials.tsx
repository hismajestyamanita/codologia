import React, { useState, useEffect, useRef } from 'react';
import { Star, ChevronLeft, ChevronRight } from 'lucide-react';
import { useScrollAnimation } from '../shared/hooks/useScrollAnimation';
import { useParallax } from '../shared/hooks/useParallax';

const Testimonials = () => {
  const [currentIndex, setCurrentIndex] = useState(0);
  const [isAutoPlaying, setIsAutoPlaying] = useState(true);
  const titleAnimation = useScrollAnimation({ delay: 0 });
  const statsAnimation = useScrollAnimation({ delay: 200 });
  const sliderAnimation = useScrollAnimation({ delay: 400 });
  
  // Refs –¥–ª—è –ø–∞—Ä–∞–ª–ª–∞–∫—Å–∞
  const sectionRef = useRef<HTMLDivElement>(null);
  const greenRef = useRef<HTMLImageElement>(null);
  const pinkRef = useRef<HTMLImageElement>(null);
  const redRef = useRef<HTMLImageElement>(null);

  const testimonials = [
    {
      name: "–ñ–∞–Ω–Ω–∞ –ü–∞–Ω–æ–≤–∞",
      text: "–°–ø–∞—Å–∏–±–æ –±–æ–ª—å—à–æ–µ –∑–∞ –∑–∞–Ω—è—Ç–∏—è, —Å—ã–Ω —Å –±–æ–ª—å—à–∏–º —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–µ–º –ø–æ—Å–µ—â–∞–µ—Ç –∏—Ö, –¥–æ–º–∞ –ø—Ä–æ—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç, —Ç–æ —á—Ç–æ –ø—Ä–æ—Ö–æ–¥–∏–ª–∏. –í–æ–æ–±—â–µ –≤—Å–µ –∑–∞–º–µ—á–∞—Ç–µ–ª—å–Ω–æ, –ø–µ–¥–∞–≥–æ–≥ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ –≤—Å—ë –æ–±—ä—è—Å–Ω—è–µ—Ç‚Ä¶",
      image: "https://images.pexels.com/photos/1181686/pexels-photo-1181686.jpeg?auto=compress&cs=tinysrgb&w=150"
    },
    {
      name: "–ú–∞—Ä–∏–Ω–∞ –°–º–µ–ª–∫–æ–≤–∞",
      text: "–î–æ—á–∫–∞ 13. –ó–∞–¥—É–º–∞–ª–∏—Å—å –æ –±—É–¥—É—â–µ–π –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏, –≤—ã–±—Ä–∞–ª–∏ –ø—Ä–æ–≥—Ä–∞–º–º—É –≤ –ö–æ–¥–æ–ª–æ–≥–∏–∏. –ó–∞–Ω—è—Ç–∏—è –ø—Ä–æ—Ö–æ–¥—è—Ç —Ä–∞–∑ –≤ –Ω–µ–¥–µ–ª—é‚Ä¶ –ë–æ–ª—å—à–æ–µ —Å–ø–∞—Å–∏–±–æ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–∞–º!",
      image: "https://images.pexels.com/photos/1239291/pexels-photo-1239291.jpeg?auto=compress&cs=tinysrgb&w=150"
    },
    {
      name: "–ò—Ä–∏–Ω–∞ –ú–µ–ª—å–Ω–∏–∫",
      text: "–°—ã–Ω—É 8 –ª–µ—Ç. –ù–∞ –∑–∞–Ω—è—Ç–∏—è —Ö–æ–¥–∏–º 2‚Äë–æ–π –≥–æ–¥. –ó–∞ —ç—Ç–æ –≤—Ä–µ–º—è –Ω–∞—É—á–∏–ª—Å—è —Ä–∏—Å–æ–≤–∞—Ç—å, –¥–µ–ª–∞—Ç—å –∏–≥—Ä—ã –∏ –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏. –†–µ–∫–æ–º–µ–Ω–¥—É—é –ö–æ–¥–æ–ª–æ–≥–∏—é –≤—Å–µ–º!",
      image: "https://images.pexels.com/photos/1181519/pexels-photo-1181519.jpeg?auto=compress&cs=tinysrgb&w=150"
    },
    {
      name: "–¢–∞—Ç—å—è–Ω–∞ –¢—Ä–µ—Ç—å—è–∫–æ–≤–∞",
      text: "–°—ã–Ω—É 9 –ª–µ—Ç, –æ—á–µ–Ω—å –Ω—Ä–∞–≤–∏—Ç—Å—è –≤–∞—à–∞ —à–∫–æ–ª–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è. –£–∂–µ –Ω–∞ –ø—Ä–∞–∫—Ç–∏–∫–µ –ø—Ä–∏–º–µ–Ω—è–µ—Ç —Ç–æ, —á—Ç–æ –æ—Å–≤–æ–∏–ª.",
      image: "https://images.pexels.com/photos/1181424/pexels-photo-1181424.jpeg?auto=compress&cs=tinysrgb&w=150"
    },
    {
      name: "–õ–∞—Ä–∏—Å–∞ –î—ë–º–∏–Ω–∞",
      text: "–°—ã–Ω—É 7 –ª–µ—Ç, —Ö–æ–¥–∏–º –Ω–µ–¥–∞–≤–Ω–æ, –Ω–æ –µ–º—É –æ—á–µ–Ω—å –Ω—Ä–∞–≤–∏—Ç—Å—è. –£–∑–Ω–∞—ë—Ç –º–Ω–æ–≥–æ –Ω–æ–≤–æ–≥–æ, –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –±—É–¥–µ–º –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å —Ö–æ–¥–∏—Ç—å!",
      image: "https://images.pexels.com/photos/1181690/pexels-photo-1181690.jpeg?auto=compress&cs=tinysrgb&w=150"
    },
    {
      name: "–í–∞–ª–µ–Ω—Ç–∏–Ω–∞ –ö–∞–º–∞–ª—é—Ç–¥–∏–Ω–æ–≤–∞",
      text: "–í–Ω—É–∫—É 10 –ª–µ—Ç, —Ö–æ–¥–∏—Ç 2 –≥–æ–¥, –æ—á–µ–Ω—å –Ω—Ä–∞–≤–∏—Ç—Å—è, —É–∑–Ω–∞—ë—Ç –º–Ω–æ–≥–æ –Ω–æ–≤–æ–≥–æ, —Å–ø–∞—Å–∏–±–æ –ê–Ω–µ—á–∫–µ!",
      image: "https://images.pexels.com/photos/1181717/pexels-photo-1181717.jpeg?auto=compress&cs=tinysrgb&w=150"
    },
    {
      name: "–ò—Ä–∏–Ω–∞ –í–µ—Å–µ–ª–∫–æ–≤–∞",
      text: "‚Ä¶–≤ —Å—Ç—É–¥–∏—é –ø–æ—à—ë–ª —Å–Ω–∞—á–∞–ª–∞ –º–ª–∞–¥—à–∏–π (6 –ª–µ—Ç), –ø–æ—Ç–æ–º —Å—Ç–∞—Ä—à–∏–π (8 –ª–µ—Ç). –î–ª—è –º–ª–∞–¥—à–µ–≥–æ ‚Äî –∏–≥—Ä–æ–≤–∞—è —Ñ–æ—Ä–º–∞, –¥–ª—è —Å—Ç–∞—Ä—à–µ–≥–æ ‚Äî –æ—Ñ–∏—Å–Ω—ã–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã. –û–±—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ä–∞—Å–ø–æ–ª–∞–≥–∞–µ—Ç –ø—Ä–∏—Ö–æ–¥–∏—Ç—å —Å–Ω–æ–≤–∞ –∏ —Å–Ω–æ–≤–∞ üòä",
      image: "https://images.pexels.com/photos/1181562/pexels-photo-1181562.jpeg?auto=compress&cs=tinysrgb&w=150"
    },
    {
      name: "–ê–Ω–∞—Å—Ç–∞—Å–∏—è –ö—É–∑–Ω–µ—Ü–æ–≤–∞",
      text: "–†–µ–±—ë–Ω–∫—É 8 –ª–µ—Ç. –ù–∞—á–∞–ª–∏ —Å —Å–æ–∑–¥–∞–Ω–∏—è –∏–≥—Ä. –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω—ã–π, –ø–æ—Å–ª–µ —É—Ä–æ–∫–æ–≤ ‚Äî –æ—Ç—á—ë—Ç. –î–æ–º–∞—à–∫—É –¥–µ–ª–∞–µ—Ç —Å —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–µ–º. –†–∞–¥—ã, —á—Ç–æ –ø–æ–ø–∞–ª–∏ –≤ –ö–æ–¥–æ–ª–æ–≥–∏—é üòä",
      image: "https://images.pexels.com/photos/1181263/pexels-photo-1181263.jpeg?auto=compress&cs=tinysrgb&w=150"
    },
    {
      name: "–ò—Ä–∏–Ω–∞ –°–µ—Ä–∫–æ–≤–∞",
      text: "–°—ã–Ω—É 8 –ª–µ—Ç, –∑–∞–Ω–∏–º–∞–µ–º—Å—è –≤—Ç–æ—Ä–æ–π –≥–æ–¥. –°–µ–π—á–∞—Å –æ–Ω —É–º–µ–µ—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å –∞–Ω–∏–º–∞—Ü–∏–∏, –∏–≥—Ä—ã, —Ä–∞–±–æ—Ç–∞–µ—Ç —Å Word –∏ Excel. –°–ø–∞—Å–∏–±–æ –ø–µ–¥–∞–≥–æ–≥–∞–º!",
      image: "https://images.pexels.com/photos/1181605/pexels-photo-1181605.jpeg?auto=compress&cs=tinysrgb&w=150"
    },
    {
      name: "–û–∫—Å–∞–Ω–∞ –ó–±–∞—Ä—Å–∫–∞—è",
      text: "–ú–æ–π —Å—ã–Ω –ø—Ä–æ—Ö–æ–¥–∏–ª –∫—É—Ä—Å –ø–æ Scratch 3 –Ω–µ–¥–µ–ª–∏. –ó–∞–Ω–∏–º–∞–ª—Å—è –∏ –≤ –æ—Ñ–∏—Å–µ, –∏ –¥–∏—Å—Ç–∞–Ω—Ü–∏–æ–Ω–Ω–æ. –ï–º—É –æ—á–µ–Ω—å –≤—Å—ë –ø–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å‚Ä¶",
      image: "https://images.pexels.com/photos/1181677/pexels-photo-1181677.jpeg?auto=compress&cs=tinysrgb&w=150"
    },
    {
      name: "–ï–∫–∞—Ç–µ—Ä–∏–Ω–∞ –ü–æ–ø–æ–≤–∞",
      text: "–û—á–µ–Ω—å –ø–æ–∑–Ω–∞–≤–∞—Ç–µ–ª—å–Ω—ã–π –∫—É—Ä—Å \"–ö–æ–º–ø—å—é—Ç–µ—Ä–Ω–∞—è –≥—Ä–∞–º–æ—Ç–Ω–æ—Å—Ç—å\", —Ä–µ–±—ë–Ω–æ–∫ –≤ –≤–æ—Å—Ç–æ—Ä–≥–µ. –û—Ç–¥–µ–ª—å–Ω–æ–µ —Å–ø–∞—Å–∏–±–æ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—é –ê–Ω–Ω–µ.",
      image: "https://images.pexels.com/photos/1181533/pexels-photo-1181533.jpeg?auto=compress&cs=tinysrgb&w=150"
    },
    {
      name: "–û–ª—å–≥–∞ –°–∞–ª–∏—Ö–æ–≤–∞",
      text: "–°—ã–Ω –≤–ø–µ—Ä–≤—ã–µ –∑–∞–Ω–∏–º–∞–ª—Å—è –Ω–∞ –∫–æ–º–ø—å—é—Ç–µ—Ä–Ω—ã—Ö –∫—É—Ä—Å–∞—Ö. –í—Å—ë –±—ã–ª–æ —Ö–æ—Ä–æ—à–æ –æ—Ä–≥–∞–Ω–∏–∑–æ–≤–∞–Ω–æ, —Ä–µ–±—ë–Ω–æ–∫ –±—ã–ª –∑–∞–Ω—è—Ç –ø–æ–∑–Ω–∞–≤–∞—Ç–µ–ª—å–Ω–æ–π –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç—å—é ‚Äî –Ω–µ –ø—Ä–æ—Å—Ç–æ –∏–≥—Ä–∞–ª –≤ –∏–≥—Ä—ã.",
      image: "https://images.pexels.com/photos/1181695/pexels-photo-1181695.jpeg?auto=compress&cs=tinysrgb&w=150"
    }
  ];

  // –ê–≤—Ç–æ–ø—Ä–æ–∫—Ä—É—Ç–∫–∞ –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫—É–Ω–¥
  useEffect(() => {
    if (!isAutoPlaying) return;
    
    const interval = setInterval(() => {
      setCurrentIndex((prev) => (prev + 1) % testimonials.length);
    }, 5000);

    return () => clearInterval(interval);
  }, [isAutoPlaying, testimonials.length]);

  const nextSlide = () => {
    setIsAutoPlaying(false);
    setCurrentIndex((prev) => {
      const nextIndex = prev + 1;
      // –ï—Å–ª–∏ –¥–æ—à–ª–∏ –¥–æ –∫–æ–Ω—Ü–∞ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –º–∞—Å—Å–∏–≤–∞, –ø–ª–∞–≤–Ω–æ —Å–±—Ä–∞—Å—ã–≤–∞–µ–º –∫ –Ω–∞—á–∞–ª—É
      if (nextIndex >= testimonials.length * 2) {
        setTimeout(() => setCurrentIndex(testimonials.length), 0);
        return nextIndex;
      }
      return nextIndex;
    });
    setTimeout(() => setIsAutoPlaying(true), 10000); // –í–æ–∑–æ–±–Ω–æ–≤–∏—Ç—å –∞–≤—Ç–æ–ø—Ä–æ–∫—Ä—É—Ç–∫—É —á–µ—Ä–µ–∑ 10 —Å–µ–∫
  };

  const prevSlide = () => {
    setIsAutoPlaying(false);
    setCurrentIndex((prev) => {
      const prevIndex = prev - 1;
      // –ï—Å–ª–∏ —É—à–ª–∏ –≤ –º–∏–Ω—É—Å, –ø–ª–∞–≤–Ω–æ –ø–µ—Ä–µ–±—Ä–∞—Å—ã–≤–∞–µ–º –≤ –∫–æ–Ω–µ—Ü
      if (prevIndex < 0) {
        setTimeout(() => setCurrentIndex(testimonials.length - 1), 0);
        return testimonials.length * 2 - 1;
      }
      return prevIndex;
    });
    setTimeout(() => setIsAutoPlaying(true), 10000); // –í–æ–∑–æ–±–Ω–æ–≤–∏—Ç—å –∞–≤—Ç–æ–ø—Ä–æ–∫—Ä—É—Ç–∫—É —á–µ—Ä–µ–∑ 10 —Å–µ–∫
  };

  const getVisibleTestimonials = () => {
    const visible = [];
    for (let i = 0; i < 3; i++) {
      const index = (currentIndex + i) % testimonials.length;
      visible.push(testimonials[index]);
    }
    return visible;
  };

  return (
    <section id="testimonials" className="w-full bg-gray-50 flex flex-col">
      {/* –ë–µ–ª—ã–π –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫ —Å–≤–µ—Ä—Ö—É */}
      <div className="w-full h-16 bg-brand-white rounded-b-[64px] shadow-lg"></div>
      
      {/* Content –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä */}
      <div ref={sectionRef} className="w-full relative overflow-hidden">
        {/* –î–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–∞ —Ñ–æ–Ω–µ */}
        <div className="absolute inset-0 pointer-events-none">
          {/* –ó–µ–ª–µ–Ω—ã–µ —Å–∫–æ–±–∫–∏ - –ª–µ–≤—ã–π –≤–µ—Ä—Ö–Ω–∏–π —É–≥–æ–ª */}
          <img
            ref={greenRef}
            src="/assets/img/04-testimonials/04-testimonials-green-skobs.webp"
            alt=""
            className="absolute -top-20 -left-20 w-96 h-96 pointer-events-none"
            data-rotate="rotate(12deg)"
          />
          
          {/* –†–æ–∑–æ–≤–∞—è —Å—Ç—Ä–µ–ª–∫–∞ - –ø—Ä–∞–≤—ã–π –≤–µ—Ä—Ö–Ω–∏–π —É–≥–æ–ª */}
          <img
            ref={pinkRef}
            src="/assets/img/04-testimonials/04-testimonials-arrow-pink.webp"
            alt=""
            className="absolute -top-16 -right-16 w-96 h-96 pointer-events-none"
            data-rotate="rotate(-175deg)"
          />
          
          {/* –ö—Ä–∞—Å–Ω—ã–µ —Å–∫–æ–±–∫–∏ - –ª–µ–≤—ã–π –Ω–∏–∂–Ω–∏–π —É–≥–æ–ª */}
          <img
            ref={redRef}
            src="/assets/img/04-testimonials/04-testimonials-red-skobs.webp"
            alt=""
            className="absolute -bottom-16 -left-16 w-96 h-96 pointer-events-none"
            data-rotate="rotate(-12deg)"
          />
        </div>
        
        <div className="mx-auto w-full max-w-[1200px] px-4 md:px-8 py-16 flex flex-col gap-6">
        <div className="text-center mb-16">
        <div className="text-center mb-16 md:mb-16 mb-8">
          <h2 
            ref={titleAnimation.ref as React.RefObject<HTMLHeadingElement>}
            className={`text-3xl sm:text-4xl md:text-5xl font-bold text-brand-black animate-on-scroll-large ${titleAnimation.isVisible ? 'visible' : ''}`}
          >
            –í–æ—Ç, —á—Ç–æ –≥–æ–≤–æ—Ä—è—Ç{' '}
            <span className="text-brand-green">—Ä–æ–¥–∏—Ç–µ–ª–∏ –∏&nbsp;–¥–µ—Ç–∏</span>{' '}
            –ø–æ—Å–ª–µ –∑–∞–Ω—è—Ç–∏–π
          </h2>
          
          <div 
            ref={statsAnimation.ref as React.RefObject<HTMLDivElement>}
            className={`flex flex-row justify-center items-center gap-6 mt-8 animate-on-scroll ${statsAnimation.isVisible ? 'visible' : ''}`}
          >
            <div className="text-center">
              <div className="text-4xl font-bold text-brand-green mb-2">900+</div>
              <div className="text-gray-600">—Ä–æ–¥–∏—Ç–µ–ª–µ–π —É–∂–µ –≤—ã–±—Ä–∞–ª–∏ –Ω–∞—Å</div>
            </div>
            <div className="text-center">
              <div className="text-4xl font-bold text-brand-green mb-2">150+</div>
              <div className="text-gray-600">–æ—Å—Ç–∞–ª–∏—Å—å —Å –Ω–∞–º–∏ –±–æ–ª–µ–µ 3 –ª–µ—Ç</div>
            </div>
          </div>

          <p className="text-sm text-gray-500 mt-card">
            –í—Å–µ –æ—Ç–∑—ã–≤—ã –≤–∑—è—Ç—ã —Å –Ω–∞—à–µ–π{' '}
            <a 
              href="https://vk.com/arh_codologia" 
              target="_blank" 
              rel="noopener noreferrer"
              className="text-brand-blue hover:text-brand-green transition-colors font-medium underline"
            >
              –≥—Ä—É–ø–ø—ã –í–ö–æ–Ω—Ç–∞–∫—Ç–µ
            </a>
          </p>
        </div>
        </div>
        

        {/* –°–ª–∞–π–¥–µ—Ä –±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π Content */}
        <div 
          ref={sliderAnimation.ref as React.RefObject<HTMLDivElement>}
          className={`relative animate-on-scroll pb-20 w-full md:-mt-8 -mt-4 ${sliderAnimation.isVisible ? 'visible' : ''}`}
        >
          {/* Desktop Slider */}
          <div className="hidden md:block overflow-visible">
            <div className="flex justify-center">
            <div 
              className="flex transition-transform duration-500 ease-in-out"
              style={{ 
                transform: `translateX(-${currentIndex * 320}px)`,
                transition: currentIndex === testimonials.length && 'none' // –£–±–∏—Ä–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –ø—Ä–∏ —Å–±—Ä–æ—Å–µ
              }}
            >
              {/* –°–æ–∑–¥–∞–µ–º 4 –∫–æ–ø–∏–∏ –º–∞—Å—Å–∏–≤–∞ –¥–ª—è –ø–ª–∞–≤–Ω–æ–π –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ–π –ø—Ä–æ–∫—Ä—É—Ç–∫–∏ */}
              {testimonials.concat(testimonials, testimonials, testimonials).map((testimonial, index) => (
                <div 
                  key={`${testimonial.name}-${index}`}
                  className="w-80 flex-shrink-0 px-2"
                >
                  <div className="bg-brand-white p-card rounded-medium shadow-lg hover:shadow-xl transition-shadow h-full flex flex-col justify-between">
                    {/* –í–µ—Ä—Ö–Ω—è—è —á–∞—Å—Ç—å: –∑–≤–µ–∑–¥—ã –∏ –æ—Ç–∑—ã–≤ */}
                    <div>
                      <div className="flex items-center gap-1 mb-4">
                        {[...Array(5)].map((_, i) => (
                          <Star key={i} className="w-5 h-5 fill-brand-green text-brand-green" />
                        ))}
                      </div>
                      
                      <p className="text-gray-700 leading-relaxed">
                        "{testimonial.text}"
                      </p>
                    </div>
                    
                    {/* –ù–∏–∂–Ω—è—è —á–∞—Å—Ç—å: –∞–≤–∞—Ç–∞—Ä–∫–∞ –∏ –∏–º—è */}
                    <div className="flex items-center gap-4 mt-6">
                      <div>
                        <div className="font-semibold text-brand-black">{testimonial.name}</div>
                        <div className="text-sm text-gray-500">—Ä–æ–¥–∏—Ç–µ–ª—å</div>
                      </div>
                    </div>
                  </div>
                </div>
              ))}
            </div>
            </div>
          </div>

          {/* Mobile Slider */}
          <div className="md:hidden overflow-visible relative pb-8">
            {/* Navigation Arrows */}
            <button
              onClick={prevSlide}
              className="absolute left-4 top-1/2 -translate-y-1/2 w-10 h-10 bg-white/80 backdrop-blur-md border border-gray-200 rounded-full shadow-lg flex items-center justify-center transition-all duration-300 z-10 hover:bg-white hover:scale-110 hover:shadow-xl"
            >
              <ChevronLeft className="w-5 h-5 text-brand-black" />
            </button>
            
            <button
              onClick={nextSlide}
              className="absolute right-4 top-1/2 -translate-y-1/2 w-10 h-10 bg-white/80 backdrop-blur-md border border-gray-200 rounded-full shadow-lg flex items-center justify-center transition-all duration-300 z-10 hover:bg-white hover:scale-110 hover:shadow-xl"
            >
              <ChevronRight className="w-5 h-5 text-brand-black" />
            </button>

            <div className="overflow-visible">
            <div 
              className="flex transition-transform duration-500 ease-in-out cursor-grab active:cursor-grabbing touch-pan-x"
              style={{ 
                transform: `translateX(calc(50vw - 160px - ${currentIndex * 320}px))`
              }}
              onTouchStart={(e) => {
                const touch = e.touches[0];
                // Store initial touch position
                e.currentTarget.setAttribute('data-start-x', touch.clientX.toString());
              }}
              onTouchEnd={(e) => {
                const touch = e.changedTouches[0];
                const startX = parseFloat(e.currentTarget.getAttribute('data-start-x') || '0');
                const diffX = startX - touch.clientX;
                
                // –ï—Å–ª–∏ —Å–≤–∞–π–ø –±–æ–ª—å—à–µ 50px
                if (Math.abs(diffX) > 50) {
                  if (diffX > 0) {
                    nextSlide(); // –°–≤–∞–π–ø –≤–ª–µ–≤–æ - —Å–ª–µ–¥—É—é—â–∏–π —Å–ª–∞–π–¥
                  } else {
                    prevSlide(); // –°–≤–∞–π–ø –≤–ø—Ä–∞–≤–æ - –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Å–ª–∞–π–¥
                  }
                }
              }}
            >
              {/* –ú–æ–±–∏–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è —Ç–∞–∫–∂–µ —Å –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–º–∏ –∫–æ–ø–∏—è–º–∏ */}
              {testimonials.concat(testimonials, testimonials, testimonials).map((testimonial, index) => (
                <div 
                  key={`mobile-${testimonial.name}-${index}`}
                  className="w-80 flex-shrink-0 px-4 pb-4"
                >
                  <div className="bg-brand-white p-6 rounded-medium shadow-lg h-full flex flex-col justify-between">
                    {/* –í–µ—Ä—Ö–Ω—è—è —á–∞—Å—Ç—å: –∑–≤–µ–∑–¥—ã –∏ –æ—Ç–∑—ã–≤ */}
                    <div>
                      <div className="flex items-center gap-1 mb-4">
                        {[...Array(5)].map((_, i) => (
                          <Star key={i} className="w-4 h-4 fill-brand-green text-brand-green" />
                        ))}
                      </div>
                      
                      <p className="text-gray-700 leading-relaxed text-sm">
                        "{testimonial.text}"
                      </p>
                    </div>
                    
                    {/* –ù–∏–∂–Ω—è—è —á–∞—Å—Ç—å: –∞–≤–∞—Ç–∞—Ä–∫–∞ –∏ –∏–º—è */}
                    <div className="flex items-center gap-3 mt-6">
                      <div>
                        <div className="font-semibold text-brand-black text-sm">{testimonial.name}</div>
                        <div className="text-xs text-gray-500">—Ä–æ–¥–∏—Ç–µ–ª—å</div>
                      </div>
                    </div>
                  </div>
                </div>
              ))}
            </div>
            </div>
          </div>
          
          {/* Desktop Navigation Buttons */}

          {/* Desktop Navigation Buttons */}
          <button
            onClick={prevSlide}
            className="hidden md:flex absolute left-4 top-1/2 -translate-y-1/2 w-12 h-12 bg-white/80 backdrop-blur-md border border-gray-200 rounded-full shadow-lg items-center justify-center transition-all duration-300 z-10 hover:bg-white hover:scale-110 hover:shadow-xl text-brand-black hover:text-brand-blue"
          >
            <ChevronLeft className="w-6 h-6" />
          </button>

          <button
            onClick={nextSlide}
            className="hidden md:flex absolute right-4 top-1/2 -translate-y-1/2 w-12 h-12 bg-white/80 backdrop-blur-md border border-gray-200 rounded-full shadow-lg items-center justify-center transition-all duration-300 z-10 hover:bg-white hover:scale-110 hover:shadow-xl text-brand-black hover:text-brand-blue"
          >
            <ChevronRight className="w-6 h-6" />
          </button>

        </div>
      </div>
      </div>
      
      {/* –ü–∞—Ä–∞–ª–ª–∞–∫—Å –¥–ª—è –¥–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π */}
      {useParallax(
        [
          { el: greenRef, speed: 0.35, base: 0 },  // –º–µ–¥–ª–µ–Ω–Ω–µ–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
          { el: pinkRef,  speed: 0.50, base: 0 },  // –µ—â—ë –º–µ–¥–ª–µ–Ω–Ω–µ–µ
          { el: redRef,   speed: 0.20, base: 0 },  // —Å–∞–º—ã–π ¬´–¥–∞–ª—å–Ω–∏–π¬ª
        ],
        sectionRef
      )}
      
      {/* –ù–∏–∂–Ω–∏–π –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫ */}
      <div className="w-full h-16 bg-brand-white rounded-t-[64px]"></div>
    </section>
  );
};

export default Testimonials;